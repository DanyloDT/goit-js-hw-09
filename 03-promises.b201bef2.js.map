{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAkBF,SAASC,cAAc,kBACzCE,EAAiBH,SAASC,cAAc,iBACxCG,EAAgBJ,SAASC,cAAc,mBAG7C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA4BPR,EAAKgB,iBAAiB,UAtBD,SAACC,GACpBA,EAAMC,iBAMN,IAJA,IAAMC,EAAQC,OAAOjB,EAAgBkB,OAC/BC,EAAOF,OAAOhB,EAAeiB,OAC7BE,EAASH,OAAOf,EAAcgB,OAE3BG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAIlClB,EAHiBkB,EAAI,EACAL,EAAQK,EAAIF,GAG9BG,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAEvEuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form')\nconst firstDelayInput = document.querySelector('[name=\"delay\"]')\nconst delayStepInput = document.querySelector('[name=\"step\"]')\nconst amountElInput = document.querySelector('[name=\"amount\"]')\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\n\nconst onPromiseBtn = (event) => {\n  event.preventDefault()\n\n  const delay = Number(firstDelayInput.value);\n  const step = Number(delayStepInput.value);\n  const amount = Number(amountElInput.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    const position = i + 1 ;\n    const promiseDelay = delay + i * step;\n     \n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n\n}\n\nform.addEventListener('submit', onPromiseBtn)\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstDelayInput","$ce04d3a99e08e73b$var$delayStepInput","$ce04d3a99e08e73b$var$amountElInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.b201bef2.js.map"}